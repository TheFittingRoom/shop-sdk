// Code generated by tygo. DO NOT EDIT.

//////////
// source: avatar.go

export interface Avatar {
  id: number /* int64 */;
  user_id?: string;
  brand_id?: number /* int64 */;
  recorded_video_storage_path?: string;
  avatar_storage_path?: string;
  sdf_storage_path?: string;
  height_cm?: number /* float64 */;
  weight_kg?: number /* float64 */;
  gender?: string;
  skin_tone_hex?: string;
  skin_tone_fac?: number /* float64 */;
  body_measurements?: { [key: string]: number /* float64 */};
}

//////////
// source: base_body.go

export interface BaseBody {
  id: number /* int64 */;
  label: string;
  measurement_unit: string;
  base_body_measurements: BaseBodyMeasurement[];
}

//////////
// source: base_body_measurement.go

export interface BaseBodyMeasurement {
  id: number /* int64 */;
  measurement_location: string;
  lay_flat: boolean;
  value: number /* float64 */;
}

//////////
// source: brand.go

export interface Brand {
  id: number /* int64 */;
  phone_number: string;
  measurement_unit: any /* enums.MeasurementUnit */;
  name: string;
  business_number: string;
  logo_storage_path: string;
  country_code: string;
  about: string;
  why_tfr: string;
  specialty: string;
}

//////////
// source: colorway.go

export interface Colorway {
  id: number /* int64 */;
  name: string;
  properties_path: string;
}

//////////
// source: colorway_size_asset.go

export interface ColorwaySizeAsset {
  id: number /* int64 */;
  sku: string;
  size_id: number /* int64 */;
  colorway_id: number /* int64 */;
  colorway_name?: string;
  folder_storage_path: string;
  glb_file_name: string;
}

//////////
// source: common.go

export interface ID {
  id: number /* int64 */;
}
export interface UserID {
  user_id: string;
}
export interface IsPublished {
  is_published: boolean;
}

//////////
// source: cycle.go

export interface Cycle {
  id: number /* int64 */;
  division_id: number /* int64 */;
  type: string;
  brand_id: number /* int64 */;
  season?: string;
  quarter?: number /* int64 */;
  quarter_drop?: number /* int64 */;
  start_date: any /* time.Time */;
  end_date: any /* time.Time */;
  name: string;
}

//////////
// source: division.go

export interface Division {
  id: number /* int64 */;
  brand_id: number /* int64 */;
  name: string;
  created_at: any /* time.Time */;
}

//////////
// source: garment_category.go

export interface GarmentCategory {
  id: number /* int64 */;
  name: string;
  label: string;
}

//////////
// source: garment_measurement.go

export interface GarmentMeasurement {
  id: number /* int64 */;
  measurement_location: string;
  lay_flat: boolean;
  value: number /* float64 */;
  stretch: number /* float64 */;
}

//////////
// source: invitation.go

export interface Invitation {
  id: number /* int64 */;
  brand_id: number /* int64 */;
  email: string;
  full_name: string;
  expires_at?: any /* time.Time */;
  created_at: any /* time.Time */;
  updated_at?: any /* time.Time */;
}

//////////
// source: joint.go

export interface Joint {
  name: string;
  side: string;
  x: number /* float64 */;
  y: number /* float64 */;
  z: number /* float64 */;
}

//////////
// source: measurement_location.go

export interface MeasurementLocation {
  name: string;
  brand_id: number /* int64 */;
  avatar_measurement_location: string;
  garment_label: string;
  avatar_label: string;
  is_vertical: boolean;
  can_layflat: boolean;
  is_required_base_body_measurement: boolean;
  sort_order: number /* int64 */;
  group?: MeasurementLocationGroup;
  is_placement_measurement: boolean;
}

//////////
// source: measurement_location_group.go

export interface MeasurementLocationGroup {
  name: string;
  label: string;
}

//////////
// source: shopify_store.go

export interface ShopifyStore {
  id: number /* int64 */;
  brand_id: number /* int64 */;
  store_name: string;
  store_url: string;
  return_window_days: number /* int64 */;
  transit_window_days: number /* int64 */;
  window_limit: number /* int64 */;
  query_window_boundary: any /* time.Time */;
  is_enabled: boolean;
}

//////////
// source: shopify_store_analytics.go

export interface ShopifyStoreAnalyticsSummary {
  shopify_store_id: number /* int64 */;
  order_count: number /* int64 */;
  size_rec_count: number /* int64 */;
  size_rec_session_count: number /* int64 */;
  size_rec_user_count: number /* int64 */;
  vto_count: number /* int64 */;
  vto_session_count: number /* int64 */;
  vto_user_count: number /* int64 */;
  min_window_start: any /* time.Time */;
  max_window_end: any /* time.Time */;
  total_sale_count: number /* int64 */;
  total_size_rec_sale_count: number /* int64 */;
  total_vto_sale_count: number /* int64 */;
  total_return_count: number /* int64 */;
  total_size_rec_return_count: number /* int64 */;
  total_vto_return_count: number /* int64 */;
  total_skip_count: number /* int64 */;
  seq_two_count: number /* int64 */;
  size_rec_seq_two_count: number /* int64 */;
  vto_seq_two_count: number /* int64 */;
  seq_three_or_more_count: number /* int64 */;
  size_rec_seq_three_or_more_count: number /* int64 */;
  vto_seq_three_or_more_count: number /* int64 */;
  seq_sale_two_count: number /* int64 */;
  size_rec_seq_sale_two_count: number /* int64 */;
  vto_seq_sale_two_count: number /* int64 */;
  seq_sale_three_or_more_count: number /* int64 */;
  size_rec_seq_sale_three_or_more_count: number /* int64 */;
  vto_seq_sale_three_or_more_count: number /* int64 */;
  shopify_store_analytics: ShopifyStoreAnalytics[];
}
export interface ShopifyStoreAnalytics {
  window_start: any /* time.Time */;
  window_end: any /* time.Time */;
  order_count: number /* int64 */;
  size_rec_count: number /* int64 */; // number of size recommendations
  size_rec_session_count: number /* int64 */; // number of overlapping 30 minute sessions
  size_rec_user_count: number /* int64 */; // number of unique users who have used size recommendation
  vto_count: number /* int64 */; // number of virtual try ons
  vto_session_count: number /* int64 */; // number of overlapping 30 minute VTO sessions
  vto_user_count: number /* int64 */; // number of unique users who have used virtual try on
  skip_count: number /* int64 */;
  sale_count: number /* int64 */;
  size_rec_sale_count: number /* int64 */;
  vto_sale_count: number /* int64 */;
  return_count: number /* int64 */;
  size_rec_return_count: number /* int64 */;
  vto_return_count: number /* int64 */;
  /**
   * total sequential variants purchased
   */
  seq_two_count: number /* int64 */;
  size_rec_seq_two_count: number /* int64 */;
  vto_seq_two_count: number /* int64 */;
  seq_three_or_more_count: number /* int64 */;
  size_rec_seq_three_or_more_count: number /* int64 */;
  vto_seq_three_or_more_count: number /* int64 */;
  /**
   * unreturned/refunded sequential variants purchased
   */
  seq_sale_two_count: number /* int64 */;
  size_rec_seq_sale_two_count: number /* int64 */;
  vto_seq_sale_two_count: number /* int64 */;
  seq_sale_three_or_more_count: number /* int64 */;
  size_rec_seq_sale_three_or_more_count: number /* int64 */;
  vto_seq_sale_three_or_more_count: number /* int64 */;
}

//////////
// source: size.go

export interface Size {
  id: number /* int64 */;
  label: string;
  reference_size_value_id: number /* int64 */;
  reference_size_value?: SizeValue;
  size_value_id: number /* int64 */;
  size_value?: SizeValue;
  vertical_size_value_id: number /* int64 */;
  vertical_size_value?: SizeValue;
  base_body_id: number /* int64 */;
  base_body?: BaseBody;
  garment_measurements: GarmentMeasurement[];
  colorway_size_assets: ColorwaySizeAsset[];
}
export interface Sizes {
  sizes: Size[];
}

//////////
// source: size_recommendation.go

export interface SizeRecommendation {
  recommended_size: Size;
  available_sizes: Size[];
}
export interface MeasurementLocationFit {
  sort_order: number /* int64 */;
  measurement_location: string;
  group: string;
  group_label: string;
  fit: any /* enums.Fit */;
  fit_label: string;
}
export interface SizeFit {
  size_id: number /* int64 */;
  measurement_location_fits: MeasurementLocationFit[];
}
export interface SizeFitRecommendation {
  fit_classification: any /* enums.FitClassification */;
  recommended_size: Size;
  available_sizes: Size[];
  fits: SizeFit[];
  data?: DebugSizeRecommendation;
}
export interface HorizontalSizeResponse {
  size_index: number /* int64 */;
  size_id: number /* int64 */;
  value: number /* float64 */;
  reference_size_index: number /* int64 */;
  reference_size_id: number /* int64 */;
  reference_size_value: number /* float64 */;
  reference_size_stretch_value: number /* float64 */;
}

//////////
// source: size_recommendation_debug.go

export interface DebugMeasurementValue {
  measurement_location: string;
  value: number /* float64 */;
}
export interface DebugMeasurementGroup {
  measurement_location: string;
  debug_size_garment_values: DebugSizeGarmentValue[];
}
export interface DebugBaseBodyMeasurementGroup {
  measurement_location: string;
  debug_base_body_measurements: DebugBaseBodyMeasurement[];
}
export interface DebugSize {
  size_id: number /* int64 */;
  size_label: string;
  size_value_id: number /* int64 */;
  size_value_label: string;
  vertical_size_value_id: number /* int64 */;
  vertical_size_value_label: string;
  debug_size_garment_values: DebugSizeGarmentValue[];
}
export interface DebugSizeGarmentValue {
  measurement_location: string;
  size_id: number /* int64 */;
  size_label: string;
  size_value_id: number /* int64 */;
  vertical_size_value_id: number /* int64 */;
  value: number /* float64 */;
  stretch: number /* float64 */;
}
export interface DebugMeasurementLocationAlias {
  measurement_location: string;
  measurement_location_alias: string;
}
export interface DebugBaseBodyMeasurement {
  measurement_location: string;
  size_id: number /* int64 */; // each size can have its own base_body
  size_value_id: number /* int64 */;
  vertical_size_value_id: number /* int64 */;
  base_body_id: number /* int64 */;
  size_label: string;
  value: number /* float64 */;
}
export interface DebugSizeSystem {
  name: string;
  size_values: SizeValue[];
}
export interface DebugSizeRecommendation {
  debug_id: string;
  brand_id: number /* int64 */;
  style_id: number /* int64 */;
  style_name: string;
  avatar_id: number /* int64 */;
  user_id: string;
  style_category_name: any /* enums.StyleCategory */;
  garment_category_name: any /* enums.GarmentCategory */;
  gender: any /* enums.Gender */;
  should_zero_base_body: boolean;
  size_system: DebugSizeSystem;
  vertical_size_system: DebugSizeSystem;
  style_category_measurement_locations: string[];
  debug_measurement_location_aliases: DebugMeasurementLocationAlias[];
  filtered_horizontal_measurement_locations: string[];
  filtered_vertical_measurement_locations: string[];
  debug_avatar_measurements: DebugMeasurementValue[];
  sizes: DebugSize[];
  debug_style_base_body_adjustments: DebugMeasurementValue[];
  debug_deformed_avatar_measurements: DebugMeasurementValue[];
  debug_filtered_measurement_groups: string[];
  invalid_horizontal_measurement_locations: string[];
  invalid_vertical_measurement_locations: string[];
  debug_initial_reference_sizes: DebugMeasurementGroup[];
  debug_base_body_measurements_before_consensus: DebugBaseBodyMeasurementGroup[];
  debug_horizontal_location_to_group_best_fit_for_reference_size: DebugSizeGarmentValue[];
  debug_consensus_reference_size: DebugSize;
  flared_exception: boolean;
  relaxed_exception: boolean;
  oversized_exception: boolean;
  debug_base_body_measurements_after_consensus: DebugBaseBodyMeasurement[];
  fit_classification: any /* enums.FitClassification */;
  exception_filtered_measurement_locations: string[];
  debug_horizontal_location_to_group_best_fit_size_after_filter_exceptions: DebugSizeGarmentValue[];
  debug_horizontal_location_to_best_fit_size_consensus: DebugSizeGarmentValue[];
  debug_vertical_location_to_group_best_fit_size: DebugSizeGarmentValue[];
  debug_vertical_location_to_best_fit_size_consensus: DebugSizeGarmentValue[];
  debug_recommended_size: DebugSize;
  debug_available_sizes: DebugSize[];
  size_fits: SizeFit[];
}

//////////
// source: size_system.go

export interface SizeSystem {
  id: number /* int64 */;
  brand_id: number /* int64 */;
  name: string;
  is_vertical: boolean;
  is_horizontal: boolean;
  size_values: SizeValue[];
}

//////////
// source: size_value.go

export interface SizeValue {
  id: any /* enums.SizeValueID */;
  name: string;
}

//////////
// source: sizing_chart.go

export interface SizingChart {
  id: number /* int64 */;
  brand_id: number /* int64 */;
  measurement_unit: string;
  name: string;
  start_size_value_id: number /* int64 */;
  size_system: SizeSystem;
  size_value_ids?: number /* int64 */[];
  start_vertical_size_value_id?: number /* int64 */;
  vertical_size_system?: SizeSystem;
  vertical_size_value_ids?: number /* int64 */[];
}

//////////
// source: style.go

export interface Style {
  id: number /* int64 */;
  brand_id: number /* int64 */;
  brand_style_id: string;
  cycle_id: number /* int64 */;
  name: string;
  description: string;
  sale_type: string;
  style_garment_category: StyleGarmentCategory;
  size_system: SizeSystem;
  vertical_size_system?: SizeSystem;
  sizes: Size[];
  colorways: Colorway[];
  colorway_size_assets: ColorwaySizeAsset[];
  measurement_unit: string;
  is_published: boolean;
  placement_measurement_location: string;
  placement_offset_y: number /* float64 */;
  is_vto: boolean;
  created_at: any /* time.Time */;
  updated_at?: any /* time.Time */;
}

//////////
// source: style_base_body_adjustment.go

export interface StyleBaseBodyAdjustments {
  id: number /* int64 */;
  adjustments: StyleBaseBodyAdjustment[];
}
export interface StyleBaseBodyAdjustment {
  measurement_location: string;
  value: number /* float64 */;
}

//////////
// source: style_category.go

export interface StyleCategory {
  id: number /* int64 */;
  brand_id: number /* int64 */;
  name: string;
  label: string;
  measurement_locations_female: string[];
  measurement_locations_male: string[];
}

//////////
// source: style_garment_category.go

export interface StyleGarmentCategory {
  id: number /* int64 */;
  brand_id: number /* int64 */;
  style_category_name: any /* enums.StyleCategory */;
  garment_category_name: any /* enums.GarmentCategory */;
  style_category?: StyleCategory;
  garment_category?: GarmentCategory;
}

//////////
// source: user.go

export interface User {
  id: string;
  brand_id: number /* int64 */;
  full_name: string;
  is_gte_18: boolean;
  is_tos_accepted: boolean;
  email: string;
  job: string;
}
